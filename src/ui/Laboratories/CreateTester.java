/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Laboratories;

import Model.Credentials.Credentials;
import Model.System.DatabaseConnection;
import Model.Tester.Tester;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.regex.Pattern;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author vidhisejpal
 */
public class CreateTester extends javax.swing.JPanel {

    /**
     * Creates new form CreateTester
     */
    Connection dbConn = null;
    PreparedStatement sqlStatement = null;
    PreparedStatement sqlStatement1 = null;
    Logger logger = LogManager.getLogger(CreateTester.class);
    public CreateTester() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        emailId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        name = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(25, 118, 211));
        jLabel2.setText("Email : ");

        emailId.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        emailId.setForeground(new java.awt.Color(25, 118, 211));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(25, 118, 211));
        jLabel3.setText("Username : ");

        userName.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        userName.setForeground(new java.awt.Color(25, 118, 211));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(25, 118, 211));
        jLabel4.setText("Password : ");

        password.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        password.setForeground(new java.awt.Color(25, 118, 211));

        name.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        name.setForeground(new java.awt.Color(25, 118, 211));
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        saveButton.setBackground(new java.awt.Color(25, 118, 211));
        saveButton.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(25, 118, 211));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Create Tester");

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(25, 118, 211));
        jLabel6.setText("Name : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 863, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(165, 165, 165))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {emailId, name, password, userName});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(emailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {emailId, name, password, userName});

    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:

        if (name.getText().isEmpty() || emailId.getText().isEmpty() || password.getText().isEmpty()
                || userName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all the attributes", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", emailId.getText()))) {
            JOptionPane.showMessageDialog(null, "Please enter a valid email", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DatabaseConnection db = new DatabaseConnection();

        try {
            dbConn = db.getConnection();
            if (dbConn != null) {
                dbConn.setAutoCommit(false);
                //generating random id
                Long id = (long) (Math.random() * (9999 - 1) + 1);
                Tester test = new Tester();
                test.setTesterId(id);
                test.setOrgId(id);
                test.setTesterName(name.getText());
                test.setTesterEmail(emailId.getText());
                test.setTesterUsername(userName.getText());
                test.setTesterPassword(String.valueOf(password.getPassword()));
                test.setTesterLicense("License date");
                
                Credentials cred = new Credentials();
                cred.setId(id);
                cred.setUsername(userName.getText());
                cred.setPassword(String.valueOf(password.getPassword()));
                cred.setRole("Tester");
                cred.setLicense("License Date");
                
                sqlStatement = dbConn.prepareStatement("INSERT INTO Tester" + " VALUES " + " (?,?,?,?,?,?,?); ");
                sqlStatement1 = dbConn.prepareStatement("INSERT INTO Credentials" + " VALUES " + " (?,?,?,?,?);");
                
                //executing query
                sqlStatement.setLong(1, test.getTesterId());
                sqlStatement.setLong(2, test.getOrgId());
                sqlStatement.setString(3, test.getTesterName());
                sqlStatement.setString(4, test.getTesterEmail());
                sqlStatement.setString(5, test.getTesterUsername());
                sqlStatement.setString(6, test.getTesterPassword());
                sqlStatement.setString(7, test.getTesterLicense()); // license date dummy value

                sqlStatement1.setLong(1, cred.getId());
                sqlStatement1.setString(2, cred.getUsername());
                sqlStatement1.setString(3, cred.getPassword());

                sqlStatement1.setString(4, cred.getRole());
                sqlStatement1.setString(5, cred.getLicense()); // license date dummy value

                if (sqlStatement.executeUpdate() > 0 && sqlStatement1.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(this, "New Tester Added Successfully");
                    System.out.println("commited");
                    dbConn.commit();
                    name.setText("");
                    emailId.setText("");
                    userName.setText("");
                    password.setText("");
                } else {
                    System.out.println("not commited");
                }
            } else {
                System.out.println("connection not done");
            }
        } catch (Exception e) {
            System.out.println(e);
            logger.error(e);
        } finally {
            if (sqlStatement != null && sqlStatement1 != null) {
                try {
                    if (!sqlStatement.isClosed()) {
                        sqlStatement.close();
                    }
                    if (!sqlStatement1.isClosed()) {
                        sqlStatement1.close();
                    }
                } catch (SQLException err) {
                    err.printStackTrace();
                    logger.error(err);

                }
            }
            if (dbConn != null) {
                try {
                    if (!dbConn.isClosed()) {
                        db.closeConnection(dbConn);
                    }
                } catch (SQLException err) {
                    err.printStackTrace();
                    logger.error(err);

                }
            }
    }//GEN-LAST:event_saveButtonActionPerformed

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emailId;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField name;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables
}
